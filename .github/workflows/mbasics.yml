# This is a basic workflow to help you get started with Actions

name: M-GitHubActions-Basics
env:
  APPLICATION_NAME    : "MFlask"
  DEPLOY_PACKAGE_NAME : "flask-deploy-ver-${{ github.sha }}"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
 # pull_request:
 #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  m_testing:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: Print Hello Message in Testing
        run: echo "Hello World from Testing job"
        
      - name: Execute few commands
        run: |
          echo "Hello Message1"
          echo "Hello Message2"
          echo "Application name: ${{ env.APPLICATION_NAME }}"
          
      - name: List current folder
        run : ls -la
        
      - name: Git clone mrepo
        uses: actions/checkout@v1
        
      - name: List current folder
        run : ls -la
          
  m_deploy:
    runs-on: ubuntu-latest
    needs: [m_testing]
    env:
      VAR1 : "This is Job Level Var1"
      VAR2 : "This is Job Level Var2"
      
    steps:
    - name: Print Hello Message in Deploy
      run: echo "Hello World from Deploy job"
      
    - name: Print env vars
      run : |
        echo "Var1 = ${{ env.VAR1 }}"
        echo "Var2 = ${{ env.VAR2 }}"
        echo "Var3 = $LOCAL_VAR"
      env :
        LOCAL_VAR: "This is super local Env var"

    - name: Printing Deployment package
      run : echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}"
      
    - name: Lets test some packages if they are here 1
      run : aws --version
      
    - name: Lets test some packages if they are here 2
      run : zip --version
